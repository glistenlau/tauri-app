type Query {
	dbSchemas(searchFolder: String!, searchPattern: String!): [SchemaFile!]!
	dbExplain(text: String!, targetId: Int): [ExplainRow!]!
}
type SchemaFile {
	path: String!
	root: TreeNode!
}
type TreeNode {
	tagName: String!
	nameAttr: String
	values: [NodeValue!]!
	children: [TreeNode!]!
	dbFamily: DbFamily
}
type NodeValue {
	start: Int!
	end: Int!
	dbFamily: DbFamily
}
enum DbFamily {
	ORACLE
	POSTGRES
	BOTH
}
type ExplainRow {
	id: Int!
	operation: String!
	level: Int!
	name: String
	starts: Int!
	eRows: Int
	aRows: Int
	aTime: String
	buffers: String!
	hasChildren: Boolean!
	oMem: String
	oneMem: String
	usedMem: String
	predicateInformation: String
	children: [ExplainRow!]
}
