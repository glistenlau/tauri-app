type TreeNode {
  tagName: String!
  nameAttr: String
  values: [NodeValue!]!
  children: [TreeNode!]!
  dbFamily: DbFamily
}

type ExplainRow {
  id: Int!
  operation: String!
  name: String
  starts: Int!
  eRows: Int
  a_rows: Int
  a_time: String
  buffers: String!
  hasChildren: Boolean!
  o_mem: String
  one_mem: String
  used_mem: String
  predicateInformation: String
  children: [ExplainRow!]!
}

type Mutation {
  changeSchemaValues(filePath: String!, values: [String!]!): SchemaFile!
}

enum DbFamily {
  ORACLE
  POSTGRES
  BOTH
}

type Query {
  apiVersion: String!
  dbSchemas(searchFolder: String!, searchPattern: String!): [SchemaFile!]!
  dbExplain(text: String!, targetId: Int): ExplainRow!
}

type NodeValue {
  start: Int!
  end: Int!
  dbFamily: DbFamily
}

type SchemaFile {
  path: String!
  root: TreeNode!
}

schema {
  query: Query
  mutation: Mutation
}
